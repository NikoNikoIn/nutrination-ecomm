{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginListReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, promoCodeReducer, promoCodeDeleteReducer, promoCodeCreateReducer, promoCodeDetailsReducer, promoCodeUpdateReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginListReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  promoCodeList: promoCodeReducer,\n  promoCodeDelete: promoCodeDeleteReducer,\n  promoCodeCreate: promoCodeCreateReducer,\n  promoCodeDetails: promoCodeDetailsReducer,\n  promoCodeUpdate: promoCodeUpdateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginListReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","promoCodeReducer","promoCodeDeleteReducer","promoCodeCreateReducer","promoCodeDetailsReducer","promoCodeUpdateReducer","reducer","productList","productDetails","productUpdate","productDelete","productCreate","cart","userLogin","userRegister","userDetails","userUpdate","userList","userDelete","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","promoCodeList","promoCodeDelete","promoCodeCreate","promoCodeDetails","promoCodeUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/ecomm/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginListReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, promoCodeReducer, promoCodeDeleteReducer, promoCodeCreateReducer, promoCodeDetailsReducer, promoCodeUpdateReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginListReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n\r\n    promoCodeList: promoCodeReducer,\r\n    promoCodeDelete: promoCodeDeleteReducer,\r\n    promoCodeCreate: promoCodeCreateReducer,\r\n    promoCodeDetails: promoCodeDetailsReducer,\r\n    promoCodeUpdate: promoCodeUpdateReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,4BAA4B;AACxJ,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,oBAAoB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AACxL,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,sBAAsB,EAAEC,sBAAsB,EAAEC,uBAAuB,EAAEC,sBAAsB,QAAQ,0BAA0B;AAG1O,MAAMC,OAAO,GAAG1B,eAAe,CAAC;EAC5B2B,WAAW,EAAEvB,kBAAkB;EAC/BwB,cAAc,EAAEvB,qBAAqB;EACrCwB,aAAa,EAAErB,oBAAoB;EACnCsB,aAAa,EAAExB,oBAAoB;EACnCyB,aAAa,EAAExB,oBAAoB;EACnCyB,IAAI,EAAEvB,WAAW;EACjBwB,SAAS,EAAEvB,oBAAoB;EAC/BwB,YAAY,EAAEvB,mBAAmB;EACjCwB,WAAW,EAAEvB,kBAAkB;EAC/BwB,UAAU,EAAEpB,iBAAiB;EAC7BqB,QAAQ,EAAEvB,eAAe;EACzBwB,UAAU,EAAEvB,iBAAiB;EAC7BwB,iBAAiB,EAAE1B,wBAAwB;EAE3C2B,WAAW,EAAEvB,kBAAkB;EAC/BwB,YAAY,EAAEvB,mBAAmB;EACjCwB,QAAQ,EAAEvB,eAAe;EACzBwB,WAAW,EAAEvB,kBAAkB;EAE/BwB,aAAa,EAAEvB,gBAAgB;EAC/BwB,eAAe,EAAEvB,sBAAsB;EACvCwB,eAAe,EAAEvB,sBAAsB;EACvCwB,gBAAgB,EAAEvB,uBAAuB;EACzCwB,eAAe,EAAEvB;AACrB,CAAC,CAAC;AAEF,MAAMwB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEnH,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAElH,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAErI,MAAMK,YAAY,GAAG;EACjBxB,IAAI,EAAE;IAACyB,SAAS,EAAER,oBAAoB;IAAES,eAAe,EAAEH;EAA0B,CAAC;EACpFtB,SAAS,EAAE;IAAC0B,QAAQ,EAAEL;EAAmB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAAC1D,KAAK,CAAC;AAE1B,MAAM2D,KAAK,GAAG9D,WAAW,CAAC2B,OAAO,EAAE8B,YAAY,EAAErD,mBAAmB,CAACF,eAAe,CAAC,GAAG2D,UAAU,CAAC,CAAC,CAAC;AAErG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}