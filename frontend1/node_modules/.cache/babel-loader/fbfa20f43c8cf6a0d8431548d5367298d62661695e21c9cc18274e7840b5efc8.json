{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["C:/ecomm/frontend/src/actions/userActions.js"],"sourcesContent":["import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_SUCCESS, \r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_SUCCESS, \r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_RESET, \r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({type: USER_LOGOUT})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}