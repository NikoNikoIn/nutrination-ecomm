[{"C:\\ecommerce\\nutrination\\backend\\src\\index.js":"1","C:\\ecommerce\\nutrination\\backend\\src\\reportWebVitals.js":"2","C:\\ecommerce\\nutrination\\backend\\src\\App.js":"3","C:\\ecommerce\\nutrination\\backend\\src\\store.js":"4","C:\\ecommerce\\nutrination\\backend\\src\\screens\\CartScreen.js":"5","C:\\ecommerce\\nutrination\\backend\\src\\screens\\HomeScreen.js":"6","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ShippingScreen.js":"7","C:\\ecommerce\\nutrination\\backend\\src\\screens\\AboutUsScreen.js":"8","C:\\ecommerce\\nutrination\\backend\\src\\screens\\RegisterScreen.js":"9","C:\\ecommerce\\nutrination\\backend\\src\\screens\\LoginScreen.js":"10","C:\\ecommerce\\nutrination\\backend\\src\\screens\\UserListScreen.js":"11","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProfileScreen.js":"12","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PaymentScreen.js":"13","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PlaceOrderScreen.js":"14","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductScreen.js":"15","C:\\ecommerce\\nutrination\\backend\\src\\screens\\OrderListScreen.js":"16","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PromoCodeEditScreen.js":"17","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductListScreen.js":"18","C:\\ecommerce\\nutrination\\backend\\src\\screens\\OrderScreen.js":"19","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PromoCodeListScreen.js":"20","C:\\ecommerce\\nutrination\\backend\\src\\screens\\UserEditScreen.js":"21","C:\\ecommerce\\nutrination\\backend\\src\\components\\ScrollToTop.js":"22","C:\\ecommerce\\nutrination\\backend\\src\\components\\Footer.js":"23","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductEditScreen.js":"24","C:\\ecommerce\\nutrination\\backend\\src\\components\\Header.js":"25","C:\\ecommerce\\nutrination\\backend\\src\\reducers\\orderReducers.js":"26","C:\\ecommerce\\nutrination\\backend\\src\\reducers\\cartReducers.js":"27","C:\\ecommerce\\nutrination\\backend\\src\\reducers\\userReducers.js":"28","C:\\ecommerce\\nutrination\\backend\\src\\reducers\\productReducers.js":"29","C:\\ecommerce\\nutrination\\backend\\src\\components\\Paginate.js":"30","C:\\ecommerce\\nutrination\\backend\\src\\components\\Message.js":"31","C:\\ecommerce\\nutrination\\backend\\src\\components\\Loader.js":"32","C:\\ecommerce\\nutrination\\backend\\src\\components\\Product.js":"33","C:\\ecommerce\\nutrination\\backend\\src\\components\\ProductCarousel.js":"34","C:\\ecommerce\\nutrination\\backend\\src\\components\\FormContainer.js":"35","C:\\ecommerce\\nutrination\\backend\\src\\components\\CheckoutSteps.js":"36","C:\\ecommerce\\nutrination\\backend\\src\\actions\\cartActions.js":"37","C:\\ecommerce\\nutrination\\backend\\src\\components\\Rating.js":"38","C:\\ecommerce\\nutrination\\backend\\src\\actions\\orderActions.js":"39","C:\\ecommerce\\nutrination\\backend\\src\\actions\\productActions.js":"40","C:\\ecommerce\\nutrination\\backend\\src\\constants\\orderConstants.js":"41","C:\\ecommerce\\nutrination\\backend\\src\\actions\\userActions.js":"42","C:\\ecommerce\\nutrination\\backend\\src\\constants\\productConstants.js":"43","C:\\ecommerce\\nutrination\\backend\\src\\components\\SearchBox.js":"44","C:\\ecommerce\\nutrination\\backend\\src\\constants\\userConstants.js":"45","C:\\ecommerce\\nutrination\\backend\\src\\constants\\cartConstants.js":"46","C:\\ecomm backup\\nutrination\\backend\\src\\index.js":"47","C:\\ecomm backup\\nutrination\\backend\\src\\reportWebVitals.js":"48","C:\\ecomm backup\\nutrination\\backend\\src\\App.js":"49","C:\\ecomm backup\\nutrination\\backend\\src\\store.js":"50","C:\\ecomm backup\\nutrination\\backend\\src\\components\\ScrollToTop.js":"51","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Header.js":"52","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\LoginScreen.js":"53","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Footer.js":"54","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProfileScreen.js":"55","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\HomeScreen.js":"56","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\AboutUsScreen.js":"57","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ShippingScreen.js":"58","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PaymentScreen.js":"59","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\CartScreen.js":"60","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductListScreen.js":"61","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\UserListScreen.js":"62","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PlaceOrderScreen.js":"63","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\UserEditScreen.js":"64","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\OrderScreen.js":"65","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PromoCodeListScreen.js":"66","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductScreen.js":"67","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PromoCodeEditScreen.js":"68","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\OrderListScreen.js":"69","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductEditScreen.js":"70","C:\\ecomm backup\\nutrination\\backend\\src\\screens\\RegisterScreen.js":"71","C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\userReducers.js":"72","C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\cartReducers.js":"73","C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\orderReducers.js":"74","C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\productReducers.js":"75","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Product.js":"76","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Loader.js":"77","C:\\ecomm backup\\nutrination\\backend\\src\\components\\FormContainer.js":"78","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Paginate.js":"79","C:\\ecomm backup\\nutrination\\backend\\src\\components\\SearchBox.js":"80","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Message.js":"81","C:\\ecomm backup\\nutrination\\backend\\src\\components\\CheckoutSteps.js":"82","C:\\ecomm backup\\nutrination\\backend\\src\\components\\ProductCarousel.js":"83","C:\\ecomm backup\\nutrination\\backend\\src\\components\\Rating.js":"84","C:\\ecomm backup\\nutrination\\backend\\src\\constants\\productConstants.js":"85","C:\\ecomm backup\\nutrination\\backend\\src\\actions\\orderActions.js":"86","C:\\ecomm backup\\nutrination\\backend\\src\\constants\\orderConstants.js":"87","C:\\ecomm backup\\nutrination\\backend\\src\\actions\\productActions.js":"88","C:\\ecomm backup\\nutrination\\backend\\src\\actions\\cartActions.js":"89","C:\\ecomm backup\\nutrination\\backend\\src\\actions\\userActions.js":"90","C:\\ecomm backup\\nutrination\\backend\\src\\constants\\userConstants.js":"91","C:\\ecomm backup\\nutrination\\backend\\src\\constants\\cartConstants.js":"92"},{"size":657,"mtime":1689873793559,"results":"93","hashOfConfig":"94"},{"size":375,"mtime":1689873793561,"results":"95","hashOfConfig":"94"},{"size":7871,"mtime":1689934721240,"results":"96","hashOfConfig":"94"},{"size":2888,"mtime":1689873793568,"results":"97","hashOfConfig":"94"},{"size":5865,"mtime":1689873793562,"results":"98","hashOfConfig":"94"},{"size":1940,"mtime":1689873793562,"results":"99","hashOfConfig":"94"},{"size":3264,"mtime":1689873793567,"results":"100","hashOfConfig":"94"},{"size":7567,"mtime":1689873793562,"results":"101","hashOfConfig":"94"},{"size":3717,"mtime":1689873793567,"results":"102","hashOfConfig":"94"},{"size":2662,"mtime":1689873793563,"results":"103","hashOfConfig":"94"},{"size":3848,"mtime":1689873793568,"results":"104","hashOfConfig":"94"},{"size":8524,"mtime":1689873793566,"results":"105","hashOfConfig":"94"},{"size":2875,"mtime":1689873793564,"results":"106","hashOfConfig":"94"},{"size":11866,"mtime":1689873793564,"results":"107","hashOfConfig":"94"},{"size":19860,"mtime":1689873793566,"results":"108","hashOfConfig":"94"},{"size":5252,"mtime":1689873793563,"results":"109","hashOfConfig":"94"},{"size":3632,"mtime":1689873793566,"results":"110","hashOfConfig":"94"},{"size":5517,"mtime":1689873793565,"results":"111","hashOfConfig":"94"},{"size":12354,"mtime":1689873793564,"results":"112","hashOfConfig":"94"},{"size":4755,"mtime":1689873793567,"results":"113","hashOfConfig":"94"},{"size":3760,"mtime":1689873793568,"results":"114","hashOfConfig":"94"},{"size":1031,"mtime":1689873793556,"results":"115","hashOfConfig":"94"},{"size":4082,"mtime":1689873793552,"results":"116","hashOfConfig":"94"},{"size":8982,"mtime":1689873793565,"results":"117","hashOfConfig":"94"},{"size":7827,"mtime":1689873793553,"results":"118","hashOfConfig":"94"},{"size":8263,"mtime":1689873793560,"results":"119","hashOfConfig":"94"},{"size":1625,"mtime":1689873793560,"results":"120","hashOfConfig":"94"},{"size":4086,"mtime":1689873793561,"results":"121","hashOfConfig":"94"},{"size":5352,"mtime":1689873793560,"results":"122","hashOfConfig":"94"},{"size":1292,"mtime":1689873793555,"results":"123","hashOfConfig":"94"},{"size":238,"mtime":1689873793554,"results":"124","hashOfConfig":"94"},{"size":475,"mtime":1689873793554,"results":"125","hashOfConfig":"94"},{"size":2671,"mtime":1689873793555,"results":"126","hashOfConfig":"94"},{"size":4984,"mtime":1689873793556,"results":"127","hashOfConfig":"94"},{"size":408,"mtime":1689873793553,"results":"128","hashOfConfig":"94"},{"size":3695,"mtime":1689873793552,"results":"129","hashOfConfig":"94"},{"size":1386,"mtime":1689873793550,"results":"130","hashOfConfig":"94"},{"size":1861,"mtime":1689873793556,"results":"131","hashOfConfig":"94"},{"size":12202,"mtime":1689873793550,"results":"132","hashOfConfig":"94"},{"size":7870,"mtime":1689873793550,"results":"133","hashOfConfig":"94"},{"size":2802,"mtime":1689873793558,"results":"134","hashOfConfig":"94"},{"size":7738,"mtime":1689873793551,"results":"135","hashOfConfig":"94"},{"size":1918,"mtime":1689873793558,"results":"136","hashOfConfig":"94"},{"size":1345,"mtime":1689873793557,"results":"137","hashOfConfig":"94"},{"size":1510,"mtime":1689873793558,"results":"138","hashOfConfig":"94"},{"size":296,"mtime":1689873793557,"results":"139","hashOfConfig":"94"},{"size":657,"mtime":1689873793559,"results":"140","hashOfConfig":"141"},{"size":375,"mtime":1689873793561,"results":"142","hashOfConfig":"141"},{"size":7871,"mtime":1689934721240,"results":"143","hashOfConfig":"141"},{"size":2888,"mtime":1689873793568,"results":"144","hashOfConfig":"141"},{"size":1031,"mtime":1689873793556,"results":"145","hashOfConfig":"141"},{"size":7827,"mtime":1689873793553,"results":"146","hashOfConfig":"141"},{"size":2662,"mtime":1689873793563,"results":"147","hashOfConfig":"141"},{"size":4082,"mtime":1689873793552,"results":"148","hashOfConfig":"141"},{"size":8524,"mtime":1689873793566,"results":"149","hashOfConfig":"141"},{"size":1940,"mtime":1689873793562,"results":"150","hashOfConfig":"141"},{"size":7567,"mtime":1689873793562,"results":"151","hashOfConfig":"141"},{"size":3264,"mtime":1689873793567,"results":"152","hashOfConfig":"141"},{"size":2875,"mtime":1689873793564,"results":"153","hashOfConfig":"141"},{"size":5865,"mtime":1689873793562,"results":"154","hashOfConfig":"141"},{"size":5517,"mtime":1689873793565,"results":"155","hashOfConfig":"141"},{"size":3848,"mtime":1689873793568,"results":"156","hashOfConfig":"141"},{"size":11866,"mtime":1689873793564,"results":"157","hashOfConfig":"141"},{"size":3760,"mtime":1689873793568,"results":"158","hashOfConfig":"141"},{"size":12354,"mtime":1689873793564,"results":"159","hashOfConfig":"141"},{"size":4755,"mtime":1689873793567,"results":"160","hashOfConfig":"141"},{"size":19860,"mtime":1689873793566,"results":"161","hashOfConfig":"141"},{"size":3632,"mtime":1689873793566,"results":"162","hashOfConfig":"141"},{"size":5252,"mtime":1689873793563,"results":"163","hashOfConfig":"141"},{"size":8982,"mtime":1689873793565,"results":"164","hashOfConfig":"141"},{"size":3717,"mtime":1689873793567,"results":"165","hashOfConfig":"141"},{"size":4086,"mtime":1689873793561,"results":"166","hashOfConfig":"141"},{"size":1625,"mtime":1689873793560,"results":"167","hashOfConfig":"141"},{"size":8263,"mtime":1689873793560,"results":"168","hashOfConfig":"141"},{"size":5352,"mtime":1689873793560,"results":"169","hashOfConfig":"141"},{"size":2671,"mtime":1689873793555,"results":"170","hashOfConfig":"141"},{"size":475,"mtime":1689873793554,"results":"171","hashOfConfig":"141"},{"size":408,"mtime":1689873793553,"results":"172","hashOfConfig":"141"},{"size":1292,"mtime":1689873793555,"results":"173","hashOfConfig":"141"},{"size":1345,"mtime":1689873793557,"results":"174","hashOfConfig":"141"},{"size":238,"mtime":1689873793554,"results":"175","hashOfConfig":"141"},{"size":3695,"mtime":1689873793552,"results":"176","hashOfConfig":"141"},{"size":4984,"mtime":1689873793556,"results":"177","hashOfConfig":"141"},{"size":1861,"mtime":1689873793556,"results":"178","hashOfConfig":"141"},{"size":1918,"mtime":1689873793558,"results":"179","hashOfConfig":"141"},{"size":12202,"mtime":1689873793550,"results":"180","hashOfConfig":"141"},{"size":2802,"mtime":1689873793558,"results":"181","hashOfConfig":"141"},{"size":7870,"mtime":1689873793550,"results":"182","hashOfConfig":"141"},{"size":1386,"mtime":1689873793550,"results":"183","hashOfConfig":"141"},{"size":7738,"mtime":1689873793551,"results":"184","hashOfConfig":"141"},{"size":1510,"mtime":1689873793558,"results":"185","hashOfConfig":"141"},{"size":296,"mtime":1689873793557,"results":"186","hashOfConfig":"141"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1mchqc9",{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"190"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"190"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"190"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"190"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"190"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"190"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"190"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"190"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"190"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"190"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"190"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"190"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"190"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"190"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"190"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"190"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ccz1fx",{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\ecommerce\\nutrination\\backend\\src\\index.js",[],[],[],"C:\\ecommerce\\nutrination\\backend\\src\\reportWebVitals.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\App.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\store.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\CartScreen.js",["483","484","485"],[],"import React, { useEffect } from 'react'\r\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen() {\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { product: { _id: productId } } = productDetails\r\n    \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const location = useLocation()\r\n    const searchParams = new URLSearchParams(location.search)\r\n    const qty = Number(searchParams.get('qty'))\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (productId && qty) {\r\n            const existingCartItem = cartItems.find(item => item.product === productId)\r\n            if (!existingCartItem ) {\r\n                dispatch(addToCart(productId, qty))\r\n            }\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n    function handleClick() {\r\n        navigate(-1)\r\n    }\r\n    const checkoutHandler = () => {\r\n        if (userInfo) {\r\n            navigate('/shipping')\r\n        } else navigate('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                <Link onClick={handleClick} className='btn btn-light my-3'>\r\n                    Go Back\r\n                </Link>\r\n                {cartItems.length === 0 ? (\r\n                    <div>\r\n                        <Message variant='info'>Your cart is empty</Message>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map((item) => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col xs={6} md={2} className='mb-3 mb-md-0'>\r\n                                            <Image src={decodeURIComponent(item.image).replace('/images/', '')} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col xs={6} md={3} className='d-flex align-items-center justify-content-center'>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col xs={6} md={2} className='d-flex align-items-center justify-content-center'>\r\n                                            \r\n                                            {item.discountProduct > 0 ? (\r\n                                                    <>\r\n                                                        <strike>${item.price * item.qty} </strike> <span style={{ color: 'rgb(76, 161, 19)' }}> ${ ((item.price * (1 - 0.01 * item.discountProduct)) * item.qty).toFixed(2) } </span>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        ${item.price * item.qty}\r\n                                                    </>\r\n                                            )}\r\n                                        </Col>\r\n                                        <Col xs={6} md={3} className='d-flex align-items-center justify-content-center'>\r\n                                            Qty: {item.qty}\r\n                                        </Col>\r\n                                        <Col xs={6} md={1} className='d-flex align-items-center justify-content-center'>\r\n                                            <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </div>\r\n                )}\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n                <h1>Subtotal </h1>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>{cartItems.reduce((acc, item) => acc + parseInt(item.qty), 0)} items</h2>\r\n                            ${Number(cartItems.reduce((acc, item) => {\r\n                                if (item.discountProduct > 0) {\r\n                                    return (acc + item.qty * item.price * (1 - 0.01 * item.discountProduct))\r\n                                } else {\r\n                                    return (acc + item.qty * item.price)\r\n                                }\r\n                            }, 0)).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <Button type='button' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }} disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                        Proceed To Checkout\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default CartScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\HomeScreen.js",["486","487"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nfunction HomeScreen() {\r\n\r\n    const navigate = useNavigate\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, pages} = productList\r\n\r\n    const location = useLocation()\r\n    const searchParams = new URLSearchParams(location.search)\r\n\r\n    const keyword = searchParams.get('keyword') || ''\r\n    const page = searchParams.get('page') || 1\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, page))\r\n    }, [dispatch, keyword, page])\r\n\r\n    \r\n    return (\r\n        <div className='body'>\r\n            {!keyword && <ProductCarousel/>}\r\n            {!keyword ? (<h1>Latest Products</h1>) : (<h1>Search Results on '{keyword}'</h1>)}\r\n            <Paginate page={page} pages={pages} keyword={keyword}/>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n            }\r\n            <Paginate page={page} pages={pages} keyword={keyword}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default HomeScreen","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ShippingScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\AboutUsScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\RegisterScreen.js",["488","489"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, redirect } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const redirect = Location.search ? Location.search.split('=')[1] : '/' \r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword) {\r\n            setMessage('Passwords do not match.')\r\n        } else dispatch(register(name, email, password))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 style={{ fontSize: '3rem', marginBottom: '1rem' }}>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form style={{ maxWidth: '600px', margin: '0 auto' }} onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control required type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control required type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control required type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control required type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }}>Register</Button>\r\n                <p style={{ fontSize: '1.2rem', marginTop: '2rem' }}>Already have an account? <Link to='/login'>Sign In</Link></p>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\LoginScreen.js",["490","491","492","493"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, redirect } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction LoginScreen() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const redirect = Location.search ? Location.search.split('=')[1] : '/' \r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 style={{ fontSize: '3rem', marginBottom: '1rem' }}>Log In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form style={{ maxWidth: '600px', margin: '0 auto' }} onSubmit={submitHandler}>\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }}>Log In</Button>\r\n                \r\n                <p style={{ fontSize: '1.2rem', marginTop: '2rem' }}>Don't have an account? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></p>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\UserListScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProfileScreen.js",["494","495"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile, deleteUser } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders, listOrders } from '../actions/orderActions'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        } else {\r\n            dispatch(listMyOrders())\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [navigate, userInfo, dispatch, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to your account?')) {\r\n            dispatch(logout())\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col s={12} md={5}>\r\n                <h2><i class='fa-solid fa-address-card'></i> User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler} style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n\r\n                <Form.Group controlId='name' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    required\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    required\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Confirm New Password</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                    style={{\r\n                    fontSize: '1.5rem',\r\n                    padding: '1rem 2rem',\r\n                    borderRadius: '4px',\r\n                    display: 'block',\r\n                    width: '100%',\r\n                    marginTop: '2rem',\r\n                    marginBottom: '2rem'\r\n                    }}\r\n                >\r\n                    Update\r\n                </Button>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='danger'\r\n                    style={{\r\n                    fontSize: '1.5rem',\r\n                    padding: '1rem 2rem',\r\n                    borderRadius: '4px',\r\n                    display: 'block',\r\n                    width: '100%',\r\n                    marginTop: '2rem',\r\n                    marginBottom: '2rem'\r\n                    }}\r\n                    onClick={() => deleteHandler(user._id)}\r\n                >\r\n                    Delete User\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col s={12} md={7}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? new Date(order.paidAt).toLocaleDateString() : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? new Date(order.deliveredAt).toLocaleDateString() : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PaymentScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\PlaceOrderScreen.js",["496"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction PlaceOrderScreen() {\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state) => state.cart)\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const navigate = useNavigate()\r\n\r\n    const [shouldRedirect, setShouldRedirect] = useState(false)\r\n\r\n    const [promoCode, setPromoCode] = useState('')\r\n    const [promoCodeUsed, setPromoCodeUsed] = useState(false)\r\n    const [discount, setDiscount] = useState(0)\r\n\r\n    cart.paymentMethod = JSON.parse(localStorage.getItem('paymentMethod'))\r\n\r\n    cart.itemsPrice = Number(cart.cartItems.reduce((acc, item) => {\r\n        if (item.discountProduct > 0) {\r\n          return (acc + item.qty * item.price * (1 - 0.01 * item.discountProduct))\r\n        } else {\r\n          return (acc + item.qty * item.price)\r\n        }\r\n    }, 0)).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 50 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(0.09 * cart.itemsPrice).toFixed(2)\r\n    if (!promoCodeUsed) cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const handleActivate = () => {\r\n        if (!promoCodeUsed) {\r\n            axios.get(`api/orders/promocodes/byname/${promoCode}`).then((response) => {\r\n                const data = response.data\r\n                if (data.promoCode === promoCode) {\r\n                    cart.totalPrice = (Number(cart.totalPrice - cart.totalPrice * (Number(data.discount) / 100))).toFixed(2)\r\n                    setDiscount(data.discount)\r\n                    setPromoCodeUsed(true)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        window.location.href = '/'    \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cart.paymentMethod == null || cart.shippingAddress === '' || !userInfo) {\r\n            setShouldRedirect(true)\r\n        } else {\r\n            setShouldRedirect(false)\r\n        }\r\n    }, [cart.paymentMethod, cart.shippingAddress, userInfo])\r\n\r\n    useEffect(() => {\r\n        if (shouldRedirect) {\r\n            navigate('/')\r\n        }\r\n    }, [shouldRedirect, navigate])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n            cart.cartItems = []\r\n        }\r\n    }, [success, navigate])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormContainer>            \r\n                <CheckoutSteps step1 step2 step3 step4 />\r\n            </FormContainer>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-solid fa-truck'></i> Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country},\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode}.\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-solid fa-cash-register'></i> Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-sharp fa-solid fa-basket-shopping'></i> Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <div>\r\n                                    <Link onClick={handleClick} className='btn btn-light my-3'>\r\n                                        Go Back\r\n                                    </Link>\r\n                                    <Message variant='info'>Your cart is empty</Message>\r\n                                </div> \r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={decodeURIComponent(item.image).replace('/images/', '')} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col className='d-flex align-items-center'>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4} className='d-flex align-items-center'>\r\n                                                    {item.discountProduct > 0 ? (\r\n                                                        <>\r\n                                                            {item.qty} X ${ (item.price * (1 - 0.01 * item.discountProduct)).toFixed(2) } = ${(item.qty * (item.price * (1 - 0.01 * item.discountProduct)).toFixed(2)).toFixed(2)} (with discount)\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            ) }\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.itemsPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Shipping (over 50$ - free):\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.shippingPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Tax (9%):\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.taxPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            {!promoCodeUsed ? (\r\n                                <ListGroup.Item>\r\n                                    <Form.Group controlId='promoCode'>\r\n                                        <Form.Label>Promo Code:</Form.Label>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Enter Promo Code'\r\n                                            value={promoCode}\r\n                                            onChange={(e) => setPromoCode(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button className='mt-2' variant='primary' onClick={handleActivate}>Activate</Button>\r\n                                </ListGroup.Item>\r\n                            ) : (\r\n                                <ListGroup.Item>\r\n                                    <Form.Group controlId='promoCode'>\r\n                                        <Form.Label><i class='fa-solid fa-tag'></i> Promo Code applied! </Form.Label>\r\n                                        <Form.Label>-</Form.Label>\r\n                                        <Form.Label> Your discount is: {discount}%</Form.Label>\r\n                                    </Form.Group>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            \r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Total:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.totalPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type = 'button'\r\n                                className='btn-block'\r\n                                disabled = {cart.cartItems.length === 0}\r\n                                onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductScreen.js",["497","498"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview, listProducts, deleteReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Product from '../components/Product'\r\n\r\n\r\nfunction ProductScreen() {\r\n    const {id} = useParams()\r\n    const navigate = useNavigate()\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    \r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading, error, product: productCurrent} = productDetails\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {products} = productList\r\n    \r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n   \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin \r\n\r\n    const productReviewCreate = useSelector(state=>state.productReviewCreate)\r\n    const {loading: loadingProductReview, error: errorProductReview, success: successProductReview} = productReviewCreate \r\n\r\n    const reviewDelete = useSelector(state => state.reviewDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = reviewDelete\r\n\r\n    const keyword = productCurrent.category\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(id))\r\n    }, [dispatch, useParams, successProductReview, id, successDelete])\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(id))\r\n    }, [dispatch, id])\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    const addToCartHandler = () => {\r\n        navigate(`/cart/?id=${id}&qty=${qty}`)\r\n    }\r\n\r\n    function handleClick() {\r\n        navigate(-1)\r\n    }\r\n\r\n    const handleLoginRedirect = () => {\r\n        navigate('/login')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            id, {\r\n            rating,\r\n            comment,\r\n        }\r\n        ))\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this review?')) {\r\n            dispatch(deleteReview(id))\r\n        }\r\n    }\r\n\r\n    return <div>\r\n            <Link onClick={handleClick} className='btn btn-light my-3'>Go Back</Link>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n            {loading ?\r\n                <Loader/>\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                :(\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <Image\r\n                                src={decodeURIComponent(productCurrent.image).replace('/images/', '')}\r\n                                alt={productCurrent.name}\r\n                                fluid\r\n                                style={{ transition: 'transform 0.5s', borderRadius: '8px', filter: productCurrent.countInStock === 0 ? 'grayscale(100%)' : 'none' }}\r\n                                onMouseOver={e => e.target.style.transform = 'scale(1.05)'}\r\n                                onMouseOut={e => e.target.style.transform = 'scale(1)'}\r\n                                />                   \r\n                                {userInfo && userInfo.isAdmin && (\r\n                                    <LinkContainer to={`/admin/product/${productCurrent._id}/edit`}>\r\n                                        <Button variant='light' className='btn btn-light my-3'>\r\n                                            <i class='fa-solid fa-pen-to-square'></i> Edit\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                )}    \r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h1>{productCurrent.name}</h1>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <h3>Category: </h3><Link to={`/?keyword=${productCurrent.category}`}>{productCurrent.category}</Link>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <h3>Brand: </h3><Link to={`/?keyword=${productCurrent.brand}`}>{productCurrent.brand}</Link>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <h5\r\n                                            style={{ marginTop: '0.5rem' }}\r\n                                            title={`${productCurrent.rating} stars, ${productCurrent.numReviews} reviews`}\r\n                                        >\r\n                                            <Rating value={productCurrent.rating} text={` ${productCurrent.numReviews} review(s)`} color={'#f8e825'} />\r\n                                        </h5>                                \r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        {productCurrent.discountProduct > 0 ? (\r\n                                            <>\r\n                                                <h4><strike>${productCurrent.price}</strike> <span style={{ color: 'rgb(76, 161, 19)' }}>${ (productCurrent.price * (1 - 0.01 * productCurrent.discountProduct)).toFixed(2) } </span></h4>\r\n                                                <h5>Your discount is: <span style={{ color: 'rgb(76, 161, 19)' }}>{productCurrent.discountProduct}%</span></h5>\r\n                                            </>\r\n                                        ) : (\r\n                                            <h4>Price: ${productCurrent.price}</h4>\r\n                                        )}\r\n\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <h5>{productCurrent.description}</h5>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    {productCurrent.discountProduct > 0 ? (\r\n                                                        <>\r\n                                                            <strike>${productCurrent.price}</strike> <span style={{ color: 'rgb(76, 161, 19)' }}>${ (productCurrent.price * (1 - 0.01 * productCurrent.discountProduct)).toFixed(2) } </span>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            ${productCurrent.price}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col className={productCurrent.countInStock > 0 ? '' : 'text-danger'}>\r\n                                                    <strong>{productCurrent.countInStock > 0 ? `In Stock: ${productCurrent.countInStock} items` : 'Out of Stock'}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        {productCurrent.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Quantity:</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={qty}\r\n                                                            onChange={(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(productCurrent.countInStock).keys()].map((x)=>(\r\n                                                                    <option key={x+1} value={x+1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                        )}\r\n                                        <ListGroup.Item>\r\n                                            <Button onClick={addToCartHandler} className='btn btn-lg btn-primary' disabled={productCurrent.countInStock == 0} type='button'>Add to Cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h3 className='mt-4'>Reviews</h3>\r\n                                {productCurrent.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                            \r\n                                <ListGroup variant='flush'>\r\n                                    {productCurrent.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825'/>\r\n                                            <p>{new Date(review.createdAt).toLocaleDateString()}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        \r\n                                            {userInfo && userInfo.isAdmin && (\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(review._id)}>\r\n                                                    <i class='fa-solid fa-trash'></i>\r\n                                                </Button>                                               \r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a Review</h4>\r\n                                        {loadingProductReview && <Loader/>}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label style={{ fontSize: '1.2rem' }}>\r\n                                                        Rating\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                        style={{\r\n                                                            fontSize: '1rem',\r\n                                                            padding: '0.5rem',\r\n                                                            borderRadius: '4px',\r\n                                                            border: '1px solid #ddd',\r\n                                                            boxShadow: 'none',\r\n                                                            width: '100%',\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - OK</option>\r\n                                                        <option value='4'>4 - Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            \r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label style={{ fontSize: '1.2rem' }}>\r\n                                                        Review\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                        style={{\r\n                                                            fontSize: '1rem',\r\n                                                            padding: '0.5rem',\r\n                                                            borderRadius: '4px',\r\n                                                            border: '1px solid #ddd',\r\n                                                            boxShadow: 'none',\r\n                                                            width: '100%',\r\n                                                        }}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n                                            \r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                    style={{\r\n                                                        fontSize: '1.5rem',\r\n                                                        padding: '1rem 2rem',\r\n                                                        borderRadius: '4px',\r\n                                                        display: 'block',\r\n                                                        width: '100%',\r\n                                                        marginTop: '2rem',\r\n                                                        marginBottom: '2rem'\r\n                                                    }}\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Button\r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                            style={{\r\n                                            fontSize: '1.5rem',\r\n                                            padding: '1rem 2rem',\r\n                                            borderRadius: '4px',\r\n                                            display: 'block',\r\n                                            width: '100%',\r\n                                            marginTop: '2rem',\r\n                                            marginBottom: '2rem'\r\n                                            }}\r\n                                            onClick={handleLoginRedirect}\r\n                                            >\r\n                                                Login to Review\r\n                                            </Button>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <h3 className='mt-4'>Similar Products</h3>\r\n                                <Row>\r\n                                    {products.map((product, index) => (\r\n                                        index < 4 && productCurrent._id !== product._id && productCurrent.category === product.category && product.countInStock > 0 && (\r\n                                            <Col key={product._id} md={6}>\r\n                                                <Product product={product}/>\r\n                                            </Col>\r\n                                        )\r\n                                    ))}\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )\r\n            } \r\n        </div>\r\n    }\r\n\r\n    export default ProductScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\OrderListScreen.js",["499"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders, deleteOrder } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDelete = useSelector(state => state.orderDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = orderDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else navigate(-1)\r\n    }, [dispatch, userInfo, successDelete, navigate])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this order?')) {\r\n            dispatch(deleteOrder(id))\r\n        }\r\n    }\r\n\r\n    const deleteWhenNoUser = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            { loading \r\n                ? <Loader /> \r\n                : error \r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Table striped bordered hover responsive style={{ tableLayout: 'fixed', width: '100%' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: '14%' }}>ID</th>\r\n                                    <th style={{ width: '14%' }}>USER</th>\r\n                                    <th style={{ width: '14%' }}>DATE</th>\r\n                                    <th style={{ width: '14%' }}>TOTAL</th>\r\n                                    <th style={{ width: '14%' }}>PAID</th>\r\n                                    <th style={{ width: '14%' }}>DELIVERED</th>\r\n                                    <th style={{ width: '10%' }}></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    \r\n\r\n                                    <tr key={order._id}>\r\n                                        {!order.user || !order.user.name ? (\r\n                                            deleteWhenNoUser(order._id)\r\n                                        ) : (\r\n                                                \r\n                                            <>\r\n                                            <td style={{ width: '14%' }}>{order._id}</td>\r\n                                            <td style={{ width: '14%' }}>{order.user && order.user.name}</td>\r\n                                            <td style={{ width: '14%' }}>{new Date(order.createdAt).toLocaleString()}</td>\r\n                                            <td style={{ width: '14%' }}>${order.totalPrice}</td>\r\n                                            <td style={{ width: '14%' }}>{order.isPaid \r\n                                                ? new Date(order.paidAt).toLocaleString()\r\n                                                : <i className='fas fa-times' style={{color:'red'}}></i>}\r\n                                            </td>\r\n                                            <td style={{ width: '14%' }}>{order.isDelivered \r\n                                                ? new Date(order.deliveredAt).toLocaleString()\r\n                                                : <i className='fas fa-times' style={{color:'red'}}></i>}\r\n                                            </td>\r\n                                            <td style={{ width: '10%' }}>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i class='fa-solid fa-circle-info'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(order._id)}>\r\n                                                    <i class='fa-solid fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                            </>\r\n                                        )}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PromoCodeEditScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductListScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\OrderScreen.js",["500","501"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({match}) {\r\n    const {orderId} = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if(!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    //AVQ72eYVSxsYqMUjgWlM5DUOWOjfpZc0ph0HOHBGwn1POBX-W1gciVqfG2OWCogyB9H6KcYuMfpkqiFs\r\n\r\n    function handleClick() {\r\n        window.location.href = '/'    \r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVQ72eYVSxsYqMUjgWlM5DUOWOjfpZc0ph0HOHBGwn1POBX-W1gciVqfG2OWCogyB9H6KcYuMfpkqiFs&currency=USD'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            navigate(-1)\r\n        }\r\n\r\n        if(!order || successDeliver || order._id !== Number(orderId) || successPay) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [order, orderId, dispatch, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        const { access } = userInfo\r\n        dispatch(payOrder(orderId, paymentResult, access))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            {userInfo && (\r\n                userInfo.isAdmin ? (\r\n                    <div>\r\n                        <Link to='/admin/orderlist' className='btn btn-light my-3'>To Orders</Link>\r\n                        <Link to='/profile' className='btn btn-light my-3'>To Profile</Link>\r\n                    </div>\r\n                    ) : (\r\n                    <Link to='/profile' className='btn btn-light my-3'>To Profile</Link>\r\n                )\r\n            )}\r\n            <h1>Order #{order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-solid fa-truck'></i> Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong>\r\n                                { order.user.name }\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>\r\n                                <a href={`mailto:${order.user.email}`}>{ order.user.email }</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {'  '}\r\n                                {order.shippingAddress.country},\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode}.\r\n                            </p>\r\n\r\n                            { order.isDelivered ? (\r\n                                <Message variant='success'><i class='fa-sharp fa-solid fa-calendar-days'></i> Delivered on {new Date(order.deliveredAt).toLocaleString()}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            ) }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-solid fa-cash-register'></i> Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            { order.isPaid ? (\r\n                                <Message variant='success'><i class='fa-sharp fa-solid fa-calendar-days'></i> Paid on {\r\n                                    \r\n                                    new Date(order.paidAt).toLocaleString()\r\n                                }</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            ) }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2><i class='fa-sharp fa-solid fa-basket-shopping'></i> Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <div>\r\n                                    <Link onClick={handleClick} className='btn btn-light my-3'>\r\n                                        Go Back\r\n                                    </Link>\r\n                                    <Message variant='info'>Order is empty</Message>\r\n                                </div> \r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={decodeURIComponent(item.image).replace('/images/', '')} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col className='d-flex align-items-center'>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4} className='d-flex align-items-center'>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            ) }\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${order.itemsPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Shipping (over 50$ - free):\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${order.shippingPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Tax (9%):\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${order.taxPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Total (with discount):\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${order.totalPrice}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && order.paymentMethod === 'PayPal or Credit Card' && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader/>\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/> }\r\n                        <ListGroup.Item className='my-3'>\r\n                            <div className='d-flex justify-content-center'>\r\n\r\n                                {userInfo && userInfo.isAdmin && !order.isDelivered && (\r\n                                    <>\r\n                                        <Button \r\n                                            type='button' \r\n                                            className='btn btn-block btn-primary mx-2' \r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark as Delivered\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n\r\n                                {userInfo && userInfo.isAdmin && !order.isPaid && (\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block btn-primary mx-2'\r\n                                        onClick={() => successPaymentHandler(true)}\r\n                                    >\r\n                                        Mark as Paid\r\n                                    </Button>\r\n                                )}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\PromoCodeListScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\screens\\UserEditScreen.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\ScrollToTop.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\Footer.js",["502","503"],[],"import React from 'react'\r\nimport { MDBFooter, MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nexport default function Footer() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <MDBFooter bgColor='light' className='text-center text-lg-start text-muted'>\r\n\r\n            <section className=''>\r\n                <MDBContainer className='p-4 justify-content text-center text-md-start mt-5 border-top'>\r\n                    <MDBRow className='mt-3'>\r\n                        <MDBCol md='3' lg='4' xl='3' className='mx-auto mb-4'>\r\n                            <h6 className='text-uppercase fw-bold mb-4'>\r\n                                <LinkContainer to='/about'>\r\n                                    <Nav.Link>About us</Nav.Link>\r\n                                </LinkContainer>\r\n                            </h6>\r\n                            <p>\r\n                                NutriNation is a reputable online retailer that delivers a wide range of sport supplements, nutrition advice, and resources to support customers in their fitness and wellness journey.\r\n                            </p>\r\n                        </MDBCol>\r\n\r\n                        <MDBCol md='2' lg='2' xl='2' className='mx-auto mb-4'>\r\n                            <h6 className='text-uppercase fw-bold mb-4'>Links</h6>\r\n                            <p>\r\n                                <LinkContainer to='/cart'>\r\n                                    <Nav.Link className='nav-link-icon'>\r\n                                        <font size='+1'><i className='fas fa-shopping-cart'></i> Cart</font>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            </p>\r\n                            <p>\r\n                                {userInfo ? (\r\n                                    <NavDropdown title={`Logged in as: ${userInfo.name}`} id='username' style={{fontSize: '1.1rem'}}>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-user-pen'></i> Profile</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Item onClick={logoutHandler}><font size='+1'><i class='fa-solid fa-right-from-bracket'></i> Log Out</font></NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link>\r\n                                            <i className='fas fa-user'></i> <font size='+1'>Login</font>\r\n                                        </Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n                            </p>\r\n                            <p>\r\n                                <a href='#!' className='text-reset'></a>\r\n                            </p>\r\n                            <p>\r\n                                <a href='#!' className='text-reset'></a>\r\n                            </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </section>\r\n\r\n            <div className='text-center p-4' style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\r\n                Website by: {' '} <i class='fa-brands fa-github'></i>\r\n                <a className='text-reset fw-bold' href='https://github.com/NikoNikoIn?tab=repositories'>\r\n                    Max Kreerenko\r\n                </a>\r\n            </div>\r\n        </MDBFooter>\r\n    )\r\n}\r\n\r\n\r\n","C:\\ecommerce\\nutrination\\backend\\src\\screens\\ProductEditScreen.js",["504"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction ProductEditScreen() {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [discountProduct, setDiscountProduct] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            navigate('/admin/productlist')\r\n        } else {\r\n\r\n            if (!product.name || product._id !== Number(id)) {\r\n                dispatch(listProductDetails(id))\r\n\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setDiscountProduct(product.discountProduct)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock) \r\n                setDescription(product.description)        \r\n            }\r\n\r\n        }\r\n\r\n    }, [product, id, navigate, dispatch, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: id,\r\n            name,\r\n            price,\r\n            discountProduct,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', id)\r\n        setUploading(true)\r\n    \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n    \r\n            const response = await axios.post('/api/products/upload/', formData, config)\r\n    \r\n            const imageUrl = decodeURIComponent(response.data)\r\n            const updatedImageUrl = imageUrl.replace('http://localhost:3000/images/', '')\r\n            console.log(updatedImageUrl, 'ZZZZZ ')\r\n    \r\n            setImage(imageUrl)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className='btn btn-light my-3' onClick={() => window.history.go(-1)}>Go Back</Button>\r\n\r\n            <FormContainer>\r\n                <h1 style={{ fontSize: '3rem', marginBottom: '1rem' }}>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form style={{ maxWidth: '600px', margin: '0 auto' }} onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control type='number' step='0.01' placeholder='Enter Price' value={price} onChange={(e) => setPrice(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='discountProduct' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Discount In %</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter Discount' value={discountProduct} \r\n                                onChange={(e) => {\r\n                                    let value = parseInt(e.target.value)\r\n                                    if (value < 0) {\r\n                                        value = 0\r\n                                    } else if (value > 100) {\r\n                                        value = 100\r\n                                    }\r\n                                    setDiscountProduct(value)\r\n                                }} \r\n                                style={{ fontSize: '1.5rem', padding: '1rem' }} \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter image' value={decodeURIComponent(image).replace('/images/', '')} onChange={(e) => setImage(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n\r\n                            <Form.Control\r\n                                type='file'\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                                controlId='file'\r\n                            >\r\n\r\n                            </Form.Control>\r\n                            {uploading && <Loader/>}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter Brand' value={brand} onChange={(e) => setBrand(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Stock</Form.Label>\r\n                            <Form.Control min={0} type='number' placeholder='Enter Stock' value={countInStock} \r\n                            onChange={(e) => {\r\n                                let value = parseInt(e.target.value)\r\n                                if (value < 0) {\r\n                                  value = 0\r\n                                }\r\n                                setCountInStock(value)\r\n                            }}\r\n                            style={{ fontSize: '1.5rem', padding: '1rem' }} \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter Category' value={category} onChange={(e) => setCategory(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description' style={{ marginBottom: '1.5rem' }}>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as='textarea' row='20' placeholder='Enter Description' value={description} onChange={(e) => setDescription(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem'}} />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }}>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","C:\\ecommerce\\nutrination\\backend\\src\\components\\Header.js",["505","506","507","508"],[],"import React, {useEffect} from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown, Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Loader from '../components/Loader'\r\nimport { getCategories, listProducts } from '../actions/productActions'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, success} = productList\r\n\r\n    const productCategories = useSelector(state => state.productCategories)\r\n    const categories = productCategories.categories.categories\r\n    const { loading: loadingCategories } = productCategories\r\n\r\n    useEffect(() => {\r\n        const fetchProductsAndCategories = async () => {\r\n            await dispatch(listProducts())\r\n            dispatch(getCategories())\r\n          }\r\n        \r\n          fetchProductsAndCategories()\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n\r\n    const handleClick = (category) => {\r\n        const url = `/?keyword=${encodeURIComponent(category)}`\r\n        navigate(url)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {!loading && (\r\n                \r\n                <Navbar\r\n                    expand='lg'\r\n                    className='color-nav'\r\n                    variant='dark'\r\n                    collapseOnSelect\r\n                >\r\n                    \r\n                    <Container>\r\n                        <LinkContainer to='/'>\r\n                            <Navbar.Brand><h1 className='title-navbar'>NutriNation</h1></Navbar.Brand>\r\n                        </LinkContainer>\r\n                        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                        <Navbar.Collapse id='basic-navbar-nav'>\r\n                            <Nav className='mr-auto'>\r\n                                <LinkContainer to='/about'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-dumbbell'></i> <font size='+1'>About Us</font>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/cart'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-shopping-cart'></i> <font size='+1'>Cart</font>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n\r\n \r\n                                {!loadingCategories && (\r\n                                    <>\r\n                                        {categories && categories.length > 0 ? (\r\n                                            <NavDropdown title={<span><i class=\"fa-solid fa-boxes-stacked\"></i> Categories</span>} id='categories' style={{ fontSize: '1.1rem' }}>\r\n                                                {categories\r\n                                                    .filter((category) => category !== 'Other') // Exclude 'Other' category from the initial items\r\n                                                    .map((category) => (\r\n                                                        <NavDropdown.Item key={category} onClick={() => handleClick(category)}>\r\n                                                            {category}\r\n                                                        </NavDropdown.Item>\r\n                                                    ))}\r\n                                                {categories.includes('Other') && (\r\n                                                    <NavDropdown.Item onClick={() => handleClick('Other')}>\r\n                                                        Other\r\n                                                    </NavDropdown.Item>\r\n                                                )}\r\n                                            </NavDropdown>\r\n                                        ) : (null)}\r\n                                    </>\r\n                                )}\r\n                                {userInfo ? (\r\n                                    <NavDropdown title={<span><i class='fa-regular fa-circle-user'></i> Hi, {userInfo.name}!</span>} id='username' style={{ fontSize: '1.1rem' }}>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-user-pen'></i> Profile</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}><font size='+1'><i class='fa-solid fa-right-from-bracket'></i> Log Out</font></NavDropdown.Item>\r\n\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <>\r\n                                        <LinkContainer to='/login'>\r\n                                            <Nav.Link>\r\n                                                <i className='fas fa-user'></i> <font size='+1'>Log In</font>\r\n                                            </Nav.Link>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/register'>\r\n                                            <Nav.Link>\r\n                                                <i className='fa-solid fa-user-plus'></i> <font size='+1'>Register</font>\r\n                                            </Nav.Link>\r\n                                        </LinkContainer>\r\n                                    </>\r\n                                )\r\n                                }\r\n\r\n                                {userInfo && userInfo.isAdmin && (\r\n                                    <NavDropdown title={<><i className='fa-solid fa-toolbox'></i> Admin</>} id='adminmenu' style={{ fontSize: '1.1rem' }}>                                    \r\n                                        <LinkContainer to='/admin/userlist'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-users'></i> Users</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/productlist'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-shop'></i> Products</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/orderlist'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-truck'></i> Orders</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/promocodelist'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-tag'></i> Promo Codes</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                    </NavDropdown>                                \r\n                                )}\r\n\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                        <SearchBox/>\r\n                    </Container>\r\n                </Navbar>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","C:\\ecommerce\\nutrination\\backend\\src\\reducers\\orderReducers.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\reducers\\cartReducers.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\reducers\\userReducers.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\reducers\\productReducers.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\Paginate.js",["509","510"],[],"import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n\r\n    const handleClick = (goToPage) => {\r\n        if (isAdmin) {\r\n            const url = `/admin/productlist/?keyword=${keyword}&page=${encodeURIComponent(goToPage)}`\r\n            navigate(url)\r\n        } else {\r\n            const url = `/?keyword=${keyword}&page=${encodeURIComponent(goToPage)}`\r\n            navigate(url)\r\n        }\r\n\r\n    }\r\n\r\n    const getCurrentPage = () => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        const currentPage = parseInt(searchParams.get('page'))\r\n        return currentPage || 1\r\n    }\r\n\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n     \r\n                    <Pagination.Item key={x + 1} active={getCurrentPage() == x + 1} style={{marginRight:'5px'}} onClick={() => handleClick(x + 1)}>{x + 1}</Pagination.Item>\r\n\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","C:\\ecommerce\\nutrination\\backend\\src\\components\\Message.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\Loader.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\Product.js",["511"],[],"import React from 'react'\r\nimport { Card, Container } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n\r\n    const decodedImageUrl = decodeURIComponent(product.image)\r\n\r\n    return (\r\n        <Container className='card-container'>\r\n            <Card className='card-style rounded' style={{ width: '300px', height: '600px' }}>\r\n                <Link to={'/product/' + product._id}>\r\n                    <Card.Img src={decodeURIComponent(product.image).replace('/images/', '')} style={{ filter: product.countInStock === 0 ? 'grayscale(100%)' : 'none' }}/>\r\n                </Link>\r\n                <Card.Body>\r\n                    <Link to={'/product/' + product._id}>\r\n                        <Card.Title as='h4'>\r\n                            {product.discountProduct > 0 ? (\r\n                                <>\r\n                                    <strong>{product.name}</strong><span class=\"badge bg-secondary\">%</span>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <strong>{product.name}</strong>\r\n                                </>\r\n                            )}\r\n                        </Card.Title>\r\n                    </Link>\r\n                    <Card.Text as='p'>\r\n                        <Link to={`/?keyword=${product.category}`}>{product.category}</Link> - <Link to={`/?keyword=${product.brand}`}>{product.brand}</Link>\r\n                    </Card.Text>\r\n                    <Card.Text as='li' className={product.countInStock > 0 ? '' : 'text-danger'}>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                    </Card.Text>\r\n                    <div className='my-3'>\r\n                        <Rating value={product.rating} text={'(' + product.numReviews + ')'} color={'#f8e825'} />\r\n                    </div>\r\n                    {product.discountProduct > 0 ? (\r\n                        <Card.Text>\r\n                            <h3><strike>${product.price}</strike> <span style={{ color: 'rgb(76, 161, 19)' }}>${ (product.price * (1 - 0.01 * product.discountProduct)).toFixed(2) }</span> </h3>\r\n                            <p style={{ color: 'rgb(76, 161, 19)' }}>%{product.discountProduct} off</p>\r\n                        </Card.Text>\r\n                    ) : (\r\n                        <Card.Text as='h3'>\r\n                            ${product.price}\r\n                        </Card.Text>\r\n                    )}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Product","C:\\ecommerce\\nutrination\\backend\\src\\components\\ProductCarousel.js",["512","513","514","515"],[],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Container, Row, Col } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\nimport Rating from './Rating'\r\n\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n        {!loading && (\r\n            error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <div>\r\n                        <h1>Top Products</h1>\r\n                        <div style={{ border: '2px solid #eb4034', marginBottom: '2rem', borderRadius: '24px' }}>\r\n                            <Carousel pause='hover' style={{ borderRadius: '8px' }} \r\n                                nextIcon={<i class='fa-sharp fa-solid fa-chevron-right' style={{ color: '#eb4034', fontSize: '40px' }}></i>} \r\n                                prevIcon={<i class='fa-sharp fa-solid fa-chevron-left' style={{ color: '#eb4034', fontSize: '40px' }}></i>}\r\n                            >                            \r\n                                {products.map((product) => (\r\n                                    <Carousel.Item key={product._id}>\r\n                                        <Link to={'/product/' + product._id}>\r\n                                            <div style={{ width: '100%', height: '400px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                <Image\r\n                                                    src={decodeURIComponent(product.image).replace('/images/', '')}\r\n                                                    alt={product.name}\r\n                                                    fluid\r\n                                                    style={{\r\n                                                        width: 'auto',\r\n                                                        maxHeight: '100%',\r\n                                                        objectFit: 'contain',\r\n                                                        background: 'white'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.target.style.transition = 'transform 0.3s ease-out'\r\n                                                        e.target.style.transform = 'scale(1.05)'\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.target.style.transition = 'transform 0.3s ease-out'\r\n                                                        e.target.style.transform = 'scale(1)'\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <Carousel.Caption style={{ backgroundColor: 'rgba(0, 0, 0, 0.5)', borderRadius: '24px' }}>\r\n                                                <h4 className='mb-2 text-left' style={{ color: '#fff' }}>{product.name} \r\n                                                {product.discountProduct > 0 ? (\r\n                                                    <>\r\n                                                        <span> </span><strike>${product.price}</strike> <span>${ (product.price * (1 - 0.01 * product.discountProduct)).toFixed(2) }</span>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <span> ${product.price}</span>\r\n                                                    </>\r\n                                                )}\r\n                                                <br /> \r\n                                                {product.category} </h4>\r\n                                                <Rating value={product.rating}/>\r\n                                                <h5 className='mb-2 text-left' style={{ color: '#fff' }}>{product.numReviews} review(s)</h5>\r\n                                            </Carousel.Caption>\r\n                                        </Link>\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n                    </div>\r\n                )\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","C:\\ecommerce\\nutrination\\backend\\src\\components\\FormContainer.js",["516"],[],"import React, { Children } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","C:\\ecommerce\\nutrination\\backend\\src\\components\\CheckoutSteps.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\actions\\cartActions.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\Rating.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\actions\\orderActions.js",["517","518"],[],"import { \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    \r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_LIST_FAIL,\r\n    ORDER_PROMO_CODE_LIST_REQUEST,\r\n    ORDER_PROMO_CODE_LIST_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_DELETE_FAIL,\r\n    ORDER_PROMO_CODE_DELETE_REQUEST,\r\n    ORDER_PROMO_CODE_DELETE_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_CREATE_FAIL,\r\n    ORDER_PROMO_CODE_CREATE_REQUEST,\r\n    ORDER_PROMO_CODE_CREATE_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_DETAILS_FAIL,\r\n    ORDER_PROMO_CODE_DETAILS_REQUEST,\r\n    ORDER_PROMO_CODE_DETAILS_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_UPDATE_FAIL,\r\n    ORDER_PROMO_CODE_UPDATE_REQUEST,\r\n    ORDER_PROMO_CODE_UPDATE_SUCCESS,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_DELETE_FAIL,\r\n    ORDER_DELETE_REQUEST,\r\n    ORDER_DELETE_SUCCESS,\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/pay/${id}/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            paymentResult,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/deliver/${order._id}/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listPromoCodes = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/promocodes/', config)\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deletePromoCode = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/orders/promocodes/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createPromoCode = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/promocodes/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listPromoCodeDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ORDER_PROMO_CODE_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/orders/promocodes/${id}`)\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updatePromoCode = (promoCode) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/promocodes/update/${promoCode.id}/`,\r\n            promoCode,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type: ORDER_PROMO_CODE_DETAILS_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/orders/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecommerce\\nutrination\\backend\\src\\actions\\productActions.js",["519","520"],[],"import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    PRODUCT_CATEGORIES_REQUEST,\r\n    PRODUCT_CATEGORIES_SUCCESS,\r\n    PRODUCT_CATEGORIES_FAIL,\r\n\r\n    REVIEW_DELETE_REQUEST,\r\n    REVIEW_DELETE_SUCCESS,\r\n    REVIEW_DELETE_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '', page = 1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        if (keyword === null) keyword = ' '\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&page=${page}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch(getCategories())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CATEGORIES_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products/categories/')\r\n\r\n        dispatch({\r\n            type: PRODUCT_CATEGORIES_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CATEGORIES_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (id, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${id}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteReview = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REVIEW_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/review/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: REVIEW_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REVIEW_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecommerce\\nutrination\\backend\\src\\constants\\orderConstants.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\actions\\userActions.js",["521"],[],"import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_SUCCESS, \r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_SUCCESS, \r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_RESET, \r\n\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_FAIL, \r\n    USER_LIST_SUCCESS, \r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_FAIL, \r\n    USER_DELETE_SUCCESS, \r\n\r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nimport { \r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecommerce\\nutrination\\backend\\src\\constants\\productConstants.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\components\\SearchBox.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\constants\\userConstants.js",[],[],"C:\\ecommerce\\nutrination\\backend\\src\\constants\\cartConstants.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\index.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\reportWebVitals.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\App.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\store.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\ScrollToTop.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Header.js",["522","523","524","525"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\LoginScreen.js",["526","527","528","529"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Footer.js",["530","531"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProfileScreen.js",["532","533"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\HomeScreen.js",["534","535"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\AboutUsScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ShippingScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PaymentScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\CartScreen.js",["536","537","538"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductListScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\UserListScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PlaceOrderScreen.js",["539"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\UserEditScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\OrderScreen.js",["540","541"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PromoCodeListScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductScreen.js",["542","543"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\PromoCodeEditScreen.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\OrderListScreen.js",["544"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\ProductEditScreen.js",["545"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\screens\\RegisterScreen.js",["546","547"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\userReducers.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\cartReducers.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\orderReducers.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\reducers\\productReducers.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Product.js",["548"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Loader.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\FormContainer.js",["549"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Paginate.js",["550","551"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\SearchBox.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Message.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\CheckoutSteps.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\ProductCarousel.js",["552","553","554","555"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\components\\Rating.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\constants\\productConstants.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\actions\\orderActions.js",["556","557"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\constants\\orderConstants.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\actions\\productActions.js",["558","559"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\actions\\cartActions.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\actions\\userActions.js",["560"],[],"C:\\ecomm backup\\nutrination\\backend\\src\\constants\\userConstants.js",[],[],"C:\\ecomm backup\\nutrination\\backend\\src\\constants\\cartConstants.js",[],[],{"ruleId":"561","severity":1,"message":"562","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":25},{"ruleId":"561","severity":1,"message":"565","line":3,"column":38,"nodeType":"563","messageId":"564","endLine":3,"endColumn":42},{"ruleId":"566","severity":1,"message":"567","line":32,"column":8,"nodeType":"568","endLine":32,"endColumn":34,"suggestions":"569"},{"ruleId":"561","severity":1,"message":"570","line":1,"column":16,"nodeType":"563","messageId":"564","endLine":1,"endColumn":24},{"ruleId":"561","severity":1,"message":"571","line":15,"column":11,"nodeType":"563","messageId":"564","endLine":15,"endColumn":19},{"ruleId":"561","severity":1,"message":"572","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":24},{"ruleId":"573","severity":1,"message":"574","line":36,"column":21,"nodeType":"575","messageId":"576","endLine":36,"endColumn":23},{"ruleId":"561","severity":1,"message":"572","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":24},{"ruleId":"561","severity":1,"message":"577","line":3,"column":24,"nodeType":"563","messageId":"564","endLine":3,"endColumn":27},{"ruleId":"561","severity":1,"message":"578","line":3,"column":29,"nodeType":"563","messageId":"564","endLine":3,"endColumn":32},{"ruleId":"561","severity":1,"message":"579","line":9,"column":23,"nodeType":"563","messageId":"564","endLine":9,"endColumn":34},{"ruleId":"561","severity":1,"message":"580","line":10,"column":24,"nodeType":"563","messageId":"564","endLine":10,"endColumn":34},{"ruleId":"573","severity":1,"message":"574","line":56,"column":22,"nodeType":"575","messageId":"576","endLine":56,"endColumn":24},{"ruleId":"566","severity":1,"message":"581","line":81,"column":8,"nodeType":"568","endLine":81,"endColumn":27,"suggestions":"582"},{"ruleId":"566","severity":1,"message":"583","line":48,"column":8,"nodeType":"568","endLine":48,"endColumn":70,"suggestions":"584"},{"ruleId":"573","severity":1,"message":"585","line":201,"column":153,"nodeType":"575","messageId":"576","endLine":201,"endColumn":155},{"ruleId":"561","severity":1,"message":"570","line":1,"column":16,"nodeType":"563","messageId":"564","endLine":1,"endColumn":24},{"ruleId":"561","severity":1,"message":"565","line":2,"column":52,"nodeType":"563","messageId":"564","endLine":2,"endColumn":56},{"ruleId":"566","severity":1,"message":"586","line":69,"column":8,"nodeType":"568","endLine":69,"endColumn":62,"suggestions":"587"},{"ruleId":"588","severity":1,"message":"589","line":63,"column":33,"nodeType":"590","endLine":63,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":66,"column":33,"nodeType":"590","endLine":66,"endColumn":69},{"ruleId":"561","severity":1,"message":"591","line":2,"column":10,"nodeType":"563","messageId":"564","endLine":2,"endColumn":14},{"ruleId":"561","severity":1,"message":"592","line":2,"column":47,"nodeType":"563","messageId":"564","endLine":2,"endColumn":53},{"ruleId":"561","severity":1,"message":"593","line":7,"column":8,"nodeType":"563","messageId":"564","endLine":7,"endColumn":14},{"ruleId":"561","severity":1,"message":"591","line":9,"column":10,"nodeType":"563","messageId":"564","endLine":9,"endColumn":14},{"ruleId":"561","severity":1,"message":"594","line":25,"column":21,"nodeType":"563","messageId":"564","endLine":25,"endColumn":28},{"ruleId":"561","severity":1,"message":"595","line":3,"column":10,"nodeType":"563","messageId":"564","endLine":3,"endColumn":23},{"ruleId":"573","severity":1,"message":"585","line":34,"column":75,"nodeType":"575","messageId":"576","endLine":34,"endColumn":77},{"ruleId":"561","severity":1,"message":"596","line":8,"column":11,"nodeType":"563","messageId":"564","endLine":8,"endColumn":26},{"ruleId":"561","severity":1,"message":"597","line":4,"column":27,"nodeType":"563","messageId":"564","endLine":4,"endColumn":36},{"ruleId":"561","severity":1,"message":"577","line":4,"column":38,"nodeType":"563","messageId":"564","endLine":4,"endColumn":41},{"ruleId":"561","severity":1,"message":"578","line":4,"column":43,"nodeType":"563","messageId":"564","endLine":4,"endColumn":46},{"ruleId":"561","severity":1,"message":"593","line":5,"column":8,"nodeType":"563","messageId":"564","endLine":5,"endColumn":14},{"ruleId":"561","severity":1,"message":"598","line":1,"column":17,"nodeType":"563","messageId":"564","endLine":1,"endColumn":25},{"ruleId":"561","severity":1,"message":"599","line":45,"column":5,"nodeType":"563","messageId":"564","endLine":45,"endColumn":24},{"ruleId":"561","severity":1,"message":"600","line":482,"column":17,"nodeType":"563","messageId":"564","endLine":482,"endColumn":21},{"ruleId":"561","severity":1,"message":"600","line":123,"column":17,"nodeType":"563","messageId":"564","endLine":123,"endColumn":21},{"ruleId":"561","severity":1,"message":"600","line":301,"column":17,"nodeType":"563","messageId":"564","endLine":301,"endColumn":21},{"ruleId":"561","severity":1,"message":"601","line":20,"column":5,"nodeType":"563","messageId":"564","endLine":20,"endColumn":30},{"ruleId":"561","severity":1,"message":"592","line":2,"column":47,"nodeType":"563","messageId":"564","endLine":2,"endColumn":53},{"ruleId":"561","severity":1,"message":"593","line":7,"column":8,"nodeType":"563","messageId":"564","endLine":7,"endColumn":14},{"ruleId":"561","severity":1,"message":"591","line":9,"column":10,"nodeType":"563","messageId":"564","endLine":9,"endColumn":14},{"ruleId":"561","severity":1,"message":"594","line":25,"column":21,"nodeType":"563","messageId":"564","endLine":25,"endColumn":28},{"ruleId":"561","severity":1,"message":"572","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":24},{"ruleId":"561","severity":1,"message":"577","line":3,"column":24,"nodeType":"563","messageId":"564","endLine":3,"endColumn":27},{"ruleId":"561","severity":1,"message":"578","line":3,"column":29,"nodeType":"563","messageId":"564","endLine":3,"endColumn":32},{"ruleId":"561","severity":1,"message":"579","line":9,"column":23,"nodeType":"563","messageId":"564","endLine":9,"endColumn":34},{"ruleId":"588","severity":1,"message":"589","line":63,"column":33,"nodeType":"590","endLine":63,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":66,"column":33,"nodeType":"590","endLine":66,"endColumn":69},{"ruleId":"561","severity":1,"message":"580","line":10,"column":24,"nodeType":"563","messageId":"564","endLine":10,"endColumn":34},{"ruleId":"573","severity":1,"message":"574","line":56,"column":22,"nodeType":"575","messageId":"576","endLine":56,"endColumn":24},{"ruleId":"561","severity":1,"message":"570","line":1,"column":16,"nodeType":"563","messageId":"564","endLine":1,"endColumn":24},{"ruleId":"561","severity":1,"message":"571","line":15,"column":11,"nodeType":"563","messageId":"564","endLine":15,"endColumn":19},{"ruleId":"561","severity":1,"message":"562","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":25},{"ruleId":"561","severity":1,"message":"565","line":3,"column":38,"nodeType":"563","messageId":"564","endLine":3,"endColumn":42},{"ruleId":"566","severity":1,"message":"567","line":32,"column":8,"nodeType":"568","endLine":32,"endColumn":34,"suggestions":"602"},{"ruleId":"566","severity":1,"message":"581","line":81,"column":8,"nodeType":"568","endLine":81,"endColumn":27,"suggestions":"603"},{"ruleId":"561","severity":1,"message":"565","line":2,"column":52,"nodeType":"563","messageId":"564","endLine":2,"endColumn":56},{"ruleId":"566","severity":1,"message":"586","line":69,"column":8,"nodeType":"568","endLine":69,"endColumn":62,"suggestions":"604"},{"ruleId":"566","severity":1,"message":"583","line":48,"column":8,"nodeType":"568","endLine":48,"endColumn":70,"suggestions":"605"},{"ruleId":"573","severity":1,"message":"585","line":201,"column":153,"nodeType":"575","messageId":"576","endLine":201,"endColumn":155},{"ruleId":"561","severity":1,"message":"570","line":1,"column":16,"nodeType":"563","messageId":"564","endLine":1,"endColumn":24},{"ruleId":"561","severity":1,"message":"591","line":2,"column":10,"nodeType":"563","messageId":"564","endLine":2,"endColumn":14},{"ruleId":"561","severity":1,"message":"572","line":2,"column":16,"nodeType":"563","messageId":"564","endLine":2,"endColumn":24},{"ruleId":"573","severity":1,"message":"574","line":36,"column":21,"nodeType":"575","messageId":"576","endLine":36,"endColumn":23},{"ruleId":"561","severity":1,"message":"596","line":8,"column":11,"nodeType":"563","messageId":"564","endLine":8,"endColumn":26},{"ruleId":"561","severity":1,"message":"598","line":1,"column":17,"nodeType":"563","messageId":"564","endLine":1,"endColumn":25},{"ruleId":"561","severity":1,"message":"595","line":3,"column":10,"nodeType":"563","messageId":"564","endLine":3,"endColumn":23},{"ruleId":"573","severity":1,"message":"585","line":34,"column":75,"nodeType":"575","messageId":"576","endLine":34,"endColumn":77},{"ruleId":"561","severity":1,"message":"597","line":4,"column":27,"nodeType":"563","messageId":"564","endLine":4,"endColumn":36},{"ruleId":"561","severity":1,"message":"577","line":4,"column":38,"nodeType":"563","messageId":"564","endLine":4,"endColumn":41},{"ruleId":"561","severity":1,"message":"578","line":4,"column":43,"nodeType":"563","messageId":"564","endLine":4,"endColumn":46},{"ruleId":"561","severity":1,"message":"593","line":5,"column":8,"nodeType":"563","messageId":"564","endLine":5,"endColumn":14},{"ruleId":"561","severity":1,"message":"599","line":45,"column":5,"nodeType":"563","messageId":"564","endLine":45,"endColumn":24},{"ruleId":"561","severity":1,"message":"600","line":482,"column":17,"nodeType":"563","messageId":"564","endLine":482,"endColumn":21},{"ruleId":"561","severity":1,"message":"600","line":123,"column":17,"nodeType":"563","messageId":"564","endLine":123,"endColumn":21},{"ruleId":"561","severity":1,"message":"600","line":301,"column":17,"nodeType":"563","messageId":"564","endLine":301,"endColumn":21},{"ruleId":"561","severity":1,"message":"601","line":20,"column":5,"nodeType":"563","messageId":"564","endLine":20,"endColumn":30},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.","ArrayExpression",["606"],"'useState' is defined but never used.","'navigate' is assigned a value but never used.","'redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Row' is defined but never used.","'Col' is defined but never used.","'useLocation' is defined but never used.","'listOrders' is defined but never used.","React Hook useEffect has missing dependencies: 'cart', 'dispatch', and 'order._id'. Either include them or remove the dependency array.",["607"],"React Hook useEffect has an unnecessary dependency: 'useParams'. Either exclude it or remove the dependency array. Outer scope values like 'useParams' aren't valid dependencies because mutating them doesn't re-render the component.",["608"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["609"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Link' is defined but never used.","'Button' is defined but never used.","'Loader' is defined but never used.","'success' is assigned a value but never used.","'LinkContainer' is defined but never used.","'decodedImageUrl' is assigned a value but never used.","'Container' is defined but never used.","'Children' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.",["610"],["611"],["612"],["613"],{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"614","fix":"622"},{"desc":"616","fix":"623"},{"desc":"620","fix":"624"},{"desc":"618","fix":"625"},"Update the dependencies array to be: [cartItems, dispatch, productId, qty]",{"range":"626","text":"627"},"Update the dependencies array to be: [success, navigate, order._id, dispatch, cart]",{"range":"628","text":"629"},"Update the dependencies array to be: [dispatch, successProductReview, id, successDelete]",{"range":"630","text":"631"},"Update the dependencies array to be: [order, orderId, dispatch, successPay, successDeliver, userInfo, navigate]",{"range":"632","text":"633"},{"range":"634","text":"627"},{"range":"635","text":"629"},{"range":"636","text":"633"},{"range":"637","text":"631"},[1183,1209],"[cartItems, dispatch, productId, qty]",[3045,3064],"[success, navigate, order._id, dispatch, cart]",[1948,2010],"[dispatch, successProductReview, id, successDelete]",[2596,2650],"[order, orderId, dispatch, successPay, successDeliver, userInfo, navigate]",[1183,1209],[3045,3064],[2596,2650],[1948,2010]]