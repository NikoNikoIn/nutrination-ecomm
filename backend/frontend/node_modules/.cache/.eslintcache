[{"C:\\ecomm\\backend\\frontend\\src\\index.js":"1","C:\\ecomm\\backend\\frontend\\src\\reportWebVitals.js":"2","C:\\ecomm\\backend\\frontend\\src\\App.js":"3","C:\\ecomm\\backend\\frontend\\src\\store.js":"4","C:\\ecomm\\backend\\frontend\\src\\components\\Footer.js":"5","C:\\ecomm\\backend\\frontend\\src\\components\\ScrollToTop.js":"6","C:\\ecomm\\backend\\frontend\\src\\components\\Header.js":"7","C:\\ecomm\\backend\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\ecomm\\backend\\frontend\\src\\screens\\CartScreen.js":"9","C:\\ecomm\\backend\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\ecomm\\backend\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\ecomm\\backend\\frontend\\src\\screens\\RegisterScreen.js":"12","C:\\ecomm\\backend\\frontend\\src\\screens\\PaymentScreen.js":"13","C:\\ecomm\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"14","C:\\ecomm\\backend\\frontend\\src\\screens\\ProfileScreen.js":"15","C:\\ecomm\\backend\\frontend\\src\\screens\\AboutUsScreen.js":"16","C:\\ecomm\\backend\\frontend\\src\\screens\\ShippingScreen.js":"17","C:\\ecomm\\backend\\frontend\\src\\screens\\UserListScreen.js":"18","C:\\ecomm\\backend\\frontend\\src\\screens\\OrderScreen.js":"19","C:\\ecomm\\backend\\frontend\\src\\screens\\UserEditScreen.js":"20","C:\\ecomm\\backend\\frontend\\src\\screens\\ProductListScreen.js":"21","C:\\ecomm\\backend\\frontend\\src\\screens\\PromoCodeListScreen.js":"22","C:\\ecomm\\backend\\frontend\\src\\screens\\OrderListScreen.js":"23","C:\\ecomm\\backend\\frontend\\src\\screens\\PromoCodeEditScreen.js":"24","C:\\ecomm\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"25","C:\\ecomm\\backend\\frontend\\src\\reducers\\productReducers.js":"26","C:\\ecomm\\backend\\frontend\\src\\reducers\\orderReducers.js":"27","C:\\ecomm\\backend\\frontend\\src\\reducers\\userReducers.js":"28","C:\\ecomm\\backend\\frontend\\src\\reducers\\cartReducers.js":"29","C:\\ecomm\\backend\\frontend\\src\\components\\SearchBox.js":"30","C:\\ecomm\\backend\\frontend\\src\\components\\FormContainer.js":"31","C:\\ecomm\\backend\\frontend\\src\\components\\Message.js":"32","C:\\ecomm\\backend\\frontend\\src\\components\\Rating.js":"33","C:\\ecomm\\backend\\frontend\\src\\components\\Loader.js":"34","C:\\ecomm\\backend\\frontend\\src\\components\\Paginate.js":"35","C:\\ecomm\\backend\\frontend\\src\\components\\Product.js":"36","C:\\ecomm\\backend\\frontend\\src\\actions\\productActions.js":"37","C:\\ecomm\\backend\\frontend\\src\\components\\ProductCarousel.js":"38","C:\\ecomm\\backend\\frontend\\src\\actions\\userActions.js":"39","C:\\ecomm\\backend\\frontend\\src\\actions\\cartActions.js":"40","C:\\ecomm\\backend\\frontend\\src\\actions\\orderActions.js":"41","C:\\ecomm\\backend\\frontend\\src\\components\\CheckoutSteps.js":"42","C:\\ecomm\\backend\\frontend\\src\\constants\\productConstants.js":"43","C:\\ecomm\\backend\\frontend\\src\\constants\\userConstants.js":"44","C:\\ecomm\\backend\\frontend\\src\\constants\\orderConstants.js":"45","C:\\ecomm\\backend\\frontend\\src\\constants\\cartConstants.js":"46"},{"size":637,"mtime":1688760602977,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1687679745200,"results":"49","hashOfConfig":"48"},{"size":7748,"mtime":1689717592136,"results":"50","hashOfConfig":"48"},{"size":2888,"mtime":1689683169831,"results":"51","hashOfConfig":"48"},{"size":4082,"mtime":1689513701229,"results":"52","hashOfConfig":"48"},{"size":1031,"mtime":1689513957886,"results":"53","hashOfConfig":"48"},{"size":7233,"mtime":1689762658937,"results":"54","hashOfConfig":"48"},{"size":19716,"mtime":1689763400042,"results":"55","hashOfConfig":"48"},{"size":5821,"mtime":1689762606946,"results":"56","hashOfConfig":"48"},{"size":2662,"mtime":1689513253114,"results":"57","hashOfConfig":"48"},{"size":1871,"mtime":1689643620173,"results":"58","hashOfConfig":"48"},{"size":3717,"mtime":1689513486956,"results":"59","hashOfConfig":"48"},{"size":2863,"mtime":1689513294115,"results":"60","hashOfConfig":"48"},{"size":11822,"mtime":1689762608986,"results":"61","hashOfConfig":"48"},{"size":8524,"mtime":1689617795294,"results":"62","hashOfConfig":"48"},{"size":7567,"mtime":1689513229444,"results":"63","hashOfConfig":"48"},{"size":3264,"mtime":1689513517281,"results":"64","hashOfConfig":"48"},{"size":3848,"mtime":1689513565800,"results":"65","hashOfConfig":"48"},{"size":12310,"mtime":1689762930704,"results":"66","hashOfConfig":"48"},{"size":3760,"mtime":1689513535076,"results":"67","hashOfConfig":"48"},{"size":5517,"mtime":1689513357304,"results":"68","hashOfConfig":"48"},{"size":4755,"mtime":1689513461078,"results":"69","hashOfConfig":"48"},{"size":5252,"mtime":1689620210436,"results":"70","hashOfConfig":"48"},{"size":3632,"mtime":1689513416751,"results":"71","hashOfConfig":"48"},{"size":8713,"mtime":1689762615505,"results":"72","hashOfConfig":"48"},{"size":5352,"mtime":1689682744257,"results":"73","hashOfConfig":"48"},{"size":8263,"mtime":1689616879229,"results":"74","hashOfConfig":"48"},{"size":4086,"mtime":1689514010738,"results":"75","hashOfConfig":"48"},{"size":1625,"mtime":1689622062158,"results":"76","hashOfConfig":"48"},{"size":1345,"mtime":1689636491188,"results":"77","hashOfConfig":"48"},{"size":408,"mtime":1688388135296,"results":"78","hashOfConfig":"48"},{"size":238,"mtime":1689513755658,"results":"79","hashOfConfig":"48"},{"size":1861,"mtime":1688643452759,"results":"80","hashOfConfig":"48"},{"size":475,"mtime":1689513744350,"results":"81","hashOfConfig":"48"},{"size":1292,"mtime":1689762667375,"results":"82","hashOfConfig":"48"},{"size":2484,"mtime":1689763357602,"results":"83","hashOfConfig":"48"},{"size":7962,"mtime":1689682834473,"results":"84","hashOfConfig":"48"},{"size":4911,"mtime":1689721315513,"results":"85","hashOfConfig":"48"},{"size":7738,"mtime":1689021494006,"results":"86","hashOfConfig":"48"},{"size":1386,"mtime":1689689409972,"results":"87","hashOfConfig":"48"},{"size":12202,"mtime":1689619445699,"results":"88","hashOfConfig":"48"},{"size":3695,"mtime":1689622781342,"results":"89","hashOfConfig":"48"},{"size":1918,"mtime":1689682671324,"results":"90","hashOfConfig":"48"},{"size":1510,"mtime":1689021038802,"results":"91","hashOfConfig":"48"},{"size":2802,"mtime":1689616698657,"results":"92","hashOfConfig":"48"},{"size":296,"mtime":1688740400072,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"180r20j",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"97"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"C:\\ecomm\\backend\\frontend\\src\\index.js",[],[],[],"C:\\ecomm\\backend\\frontend\\src\\reportWebVitals.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\App.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\store.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Footer.js",["245","246"],[],"import React from 'react'\r\nimport { MDBFooter, MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nexport default function Footer() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <MDBFooter bgColor='light' className='text-center text-lg-start text-muted'>\r\n\r\n            <section className=''>\r\n                <MDBContainer className='p-4 justify-content text-center text-md-start mt-5 border-top'>\r\n                    <MDBRow className='mt-3'>\r\n                        <MDBCol md='3' lg='4' xl='3' className='mx-auto mb-4'>\r\n                            <h6 className='text-uppercase fw-bold mb-4'>\r\n                                <LinkContainer to='/about'>\r\n                                    <Nav.Link>About us</Nav.Link>\r\n                                </LinkContainer>\r\n                            </h6>\r\n                            <p>\r\n                                NutriNation is a reputable online retailer that delivers a wide range of sport supplements, nutrition advice, and resources to support customers in their fitness and wellness journey.\r\n                            </p>\r\n                        </MDBCol>\r\n\r\n                        <MDBCol md='2' lg='2' xl='2' className='mx-auto mb-4'>\r\n                            <h6 className='text-uppercase fw-bold mb-4'>Links</h6>\r\n                            <p>\r\n                                <LinkContainer to='/cart'>\r\n                                    <Nav.Link className='nav-link-icon'>\r\n                                        <font size='+1'><i className='fas fa-shopping-cart'></i> Cart</font>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            </p>\r\n                            <p>\r\n                                {userInfo ? (\r\n                                    <NavDropdown title={`Logged in as: ${userInfo.name}`} id='username' style={{fontSize: '1.1rem'}}>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item><font size='+1'><i class='fa-solid fa-user-pen'></i> Profile</font></NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Item onClick={logoutHandler}><font size='+1'><i class='fa-solid fa-right-from-bracket'></i> Log Out</font></NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link>\r\n                                            <i className='fas fa-user'></i> <font size='+1'>Login</font>\r\n                                        </Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n                            </p>\r\n                            <p>\r\n                                <a href='#!' className='text-reset'></a>\r\n                            </p>\r\n                            <p>\r\n                                <a href='#!' className='text-reset'></a>\r\n                            </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </section>\r\n\r\n            <div className='text-center p-4' style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\r\n                Website by: {' '} <i class='fa-brands fa-github'></i>\r\n                <a className='text-reset fw-bold' href='https://github.com/NikoNikoIn?tab=repositories'>\r\n                    Max Kreerenko\r\n                </a>\r\n            </div>\r\n        </MDBFooter>\r\n    )\r\n}\r\n\r\n\r\n","C:\\ecomm\\backend\\frontend\\src\\components\\ScrollToTop.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Header.js",["247","248","249"],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\ProductScreen.js",["250","251"],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\CartScreen.js",["252","253","254"],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\LoginScreen.js",["255","256","257","258"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, redirect } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction LoginScreen() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const redirect = Location.search ? Location.search.split('=')[1] : '/' \r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 style={{ fontSize: '3rem', marginBottom: '1rem' }}>Log In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form style={{ maxWidth: '600px', margin: '0 auto' }} onSubmit={submitHandler}>\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }}>Log In</Button>\r\n                \r\n                <p style={{ fontSize: '1.2rem', marginTop: '2rem' }}>Don't have an account? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></p>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\ecomm\\backend\\frontend\\src\\screens\\HomeScreen.js",["259","260"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nfunction HomeScreen() {\r\n\r\n    const navigate = useNavigate\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, pages} = productList\r\n\r\n    const location = useLocation()\r\n    const searchParams = new URLSearchParams(location.search)\r\n\r\n    const keyword = searchParams.get('keyword') || ''\r\n    const page = searchParams.get('page') || 1\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, page))\r\n    }, [dispatch, keyword, page])\r\n\r\n    \r\n    return (\r\n        <div className='body'>\r\n            {!keyword && <ProductCarousel/>}\r\n            {!keyword ? (<h1>Latest Products</h1>) : (<h1>Search Results on '{keyword}'</h1>)}\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n            }\r\n            <Paginate page={page} pages={pages} keyword={keyword}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default HomeScreen",[],"C:\\ecomm\\backend\\frontend\\src\\screens\\RegisterScreen.js",["261","262"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, redirect } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const redirect = Location.search ? Location.search.split('=')[1] : '/' \r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword) {\r\n            setMessage('Passwords do not match.')\r\n        } else dispatch(register(name, email, password))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 style={{ fontSize: '3rem', marginBottom: '1rem' }}>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form style={{ maxWidth: '600px', margin: '0 auto' }} onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control required type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control required type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control required type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control required type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} style={{ fontSize: '1.5rem', padding: '1rem' }} />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' style={{ fontSize: '1.5rem', padding: '1rem 2rem', borderRadius: '4px', display: 'block', width: '100%', marginTop: '2rem', marginBottom: '2rem' }}>Register</Button>\r\n                <p style={{ fontSize: '1.2rem', marginTop: '2rem' }}>Already have an account? <Link to='/login'>Sign In</Link></p>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\ecomm\\backend\\frontend\\src\\screens\\PaymentScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["263"],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\ProfileScreen.js",["264","265"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile, deleteUser } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders, listOrders } from '../actions/orderActions'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        } else {\r\n            dispatch(listMyOrders())\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [navigate, userInfo, dispatch, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to your account?')) {\r\n            dispatch(logout())\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col s={12} md={5}>\r\n                <h2><i class='fa-solid fa-address-card'></i> User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler} style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n\r\n                <Form.Group controlId='name' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    required\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    required\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm' style={{ marginBottom: '1.5rem' }}>\r\n                    <Form.Label>Confirm New Password</Form.Label>\r\n                    <Form.Control\r\n                    style={{ fontSize: '1.5rem', padding: '1rem' }}\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                    style={{\r\n                    fontSize: '1.5rem',\r\n                    padding: '1rem 2rem',\r\n                    borderRadius: '4px',\r\n                    display: 'block',\r\n                    width: '100%',\r\n                    marginTop: '2rem',\r\n                    marginBottom: '2rem'\r\n                    }}\r\n                >\r\n                    Update\r\n                </Button>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='danger'\r\n                    style={{\r\n                    fontSize: '1.5rem',\r\n                    padding: '1rem 2rem',\r\n                    borderRadius: '4px',\r\n                    display: 'block',\r\n                    width: '100%',\r\n                    marginTop: '2rem',\r\n                    marginBottom: '2rem'\r\n                    }}\r\n                    onClick={() => deleteHandler(user._id)}\r\n                >\r\n                    Delete User\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col s={12} md={7}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? new Date(order.paidAt).toLocaleDateString() : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? new Date(order.deliveredAt).toLocaleDateString() : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\ecomm\\backend\\frontend\\src\\screens\\AboutUsScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\ShippingScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\OrderScreen.js",["266","267"],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\UserEditScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\PromoCodeListScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\OrderListScreen.js",["268"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders, deleteOrder } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDelete = useSelector(state => state.orderDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = orderDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else navigate(-1)\r\n    }, [dispatch, userInfo, successDelete, navigate])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this order?')) {\r\n            dispatch(deleteOrder(id))\r\n        }\r\n    }\r\n\r\n    const deleteWhenNoUser = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            { loading \r\n                ? <Loader /> \r\n                : error \r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Table striped bordered hover responsive style={{ tableLayout: 'fixed', width: '100%' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: '14%' }}>ID</th>\r\n                                    <th style={{ width: '14%' }}>USER</th>\r\n                                    <th style={{ width: '14%' }}>DATE</th>\r\n                                    <th style={{ width: '14%' }}>TOTAL</th>\r\n                                    <th style={{ width: '14%' }}>PAID</th>\r\n                                    <th style={{ width: '14%' }}>DELIVERED</th>\r\n                                    <th style={{ width: '10%' }}></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    \r\n\r\n                                    <tr key={order._id}>\r\n                                        {!order.user || !order.user.name ? (\r\n                                            deleteWhenNoUser(order._id)\r\n                                        ) : (\r\n                                                \r\n                                            <>\r\n                                            <td style={{ width: '14%' }}>{order._id}</td>\r\n                                            <td style={{ width: '14%' }}>{order.user && order.user.name}</td>\r\n                                            <td style={{ width: '14%' }}>{new Date(order.createdAt).toLocaleString()}</td>\r\n                                            <td style={{ width: '14%' }}>${order.totalPrice}</td>\r\n                                            <td style={{ width: '14%' }}>{order.isPaid \r\n                                                ? new Date(order.paidAt).toLocaleString()\r\n                                                : <i className='fas fa-times' style={{color:'red'}}></i>}\r\n                                            </td>\r\n                                            <td style={{ width: '14%' }}>{order.isDelivered \r\n                                                ? new Date(order.deliveredAt).toLocaleString()\r\n                                                : <i className='fas fa-times' style={{color:'red'}}></i>}\r\n                                            </td>\r\n                                            <td style={{ width: '10%' }}>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i class='fa-solid fa-circle-info'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(order._id)}>\r\n                                                    <i class='fa-solid fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                            </>\r\n                                        )}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\ecomm\\backend\\frontend\\src\\screens\\PromoCodeEditScreen.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\screens\\ProductEditScreen.js",["269"],[],"C:\\ecomm\\backend\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\FormContainer.js",["270"],[],"import React, { Children } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","C:\\ecomm\\backend\\frontend\\src\\components\\Message.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Rating.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Loader.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Paginate.js",["271","272"],[],"C:\\ecomm\\backend\\frontend\\src\\components\\Product.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\actions\\productActions.js",["273","274"],[],"import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    PRODUCT_CATEGORIES_REQUEST,\r\n    PRODUCT_CATEGORIES_SUCCESS,\r\n    PRODUCT_CATEGORIES_FAIL,\r\n\r\n    REVIEW_DELETE_REQUEST,\r\n    REVIEW_DELETE_SUCCESS,\r\n    REVIEW_DELETE_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '', page = 1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        if (keyword === null) keyword = ' '\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&page=${page}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // Fetch categories after successfully loading products\r\n        dispatch(getCategories())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CATEGORIES_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products/categories/')\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CATEGORIES_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CATEGORIES_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (id, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${id}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteReview = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REVIEW_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/review/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: REVIEW_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REVIEW_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecomm\\backend\\frontend\\src\\components\\ProductCarousel.js",["275","276","277"],[],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Container, Row, Col } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\nimport Rating from './Rating'\r\n\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        loading ? <Loader /> :\r\n            error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <div>\r\n                        <h1>Top Products</h1>\r\n                        <div style={{ border: '2px solid #eb4034', marginBottom: '2rem', borderRadius: '24px' }}>\r\n                            <Carousel pause='hover' style={{ borderRadius: '8px' }} \r\n                                nextIcon={<i class='fa-sharp fa-solid fa-chevron-right' style={{ color: '#eb4034', fontSize: '40px' }}></i>} \r\n                                prevIcon={<i class='fa-sharp fa-solid fa-chevron-left' style={{ color: '#eb4034', fontSize: '40px' }}></i>}\r\n                            >                            \r\n                                {products.map((product) => (\r\n                                    <Carousel.Item key={product._id}>\r\n                                        <Link to={'/product/' + product._id}>\r\n                                            <div style={{ width: '100%', height: '400px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                <Image\r\n                                                    src={product.image}\r\n                                                    alt={product.name}\r\n                                                    fluid\r\n                                                    style={{\r\n                                                        width: 'auto',\r\n                                                        maxHeight: '100%',\r\n                                                        objectFit: 'contain',\r\n                                                        background: 'white'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.target.style.transition = 'transform 0.3s ease-out'\r\n                                                        e.target.style.transform = 'scale(1.05)'\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.target.style.transition = 'transform 0.3s ease-out'\r\n                                                        e.target.style.transform = 'scale(1)'\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <Carousel.Caption style={{ backgroundColor: 'rgba(0, 0, 0, 0.5)', borderRadius: '24px' }}>\r\n                                                <h4 className='mb-2 text-left' style={{ color: '#fff' }}>{product.name} \r\n                                                {product.discountProduct > 0 ? (\r\n                                                    <>\r\n                                                        <span> </span><strike>${product.price}</strike> <span>${ (product.price * (1 - 0.01 * product.discountProduct)).toFixed(2) }</span>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <span> ${product.price}</span>\r\n                                                    </>\r\n                                                )}\r\n                                                <br /> \r\n                                                {product.category} </h4>\r\n                                                <Rating value={product.rating}/>\r\n                                                <h5 className='mb-2 text-left' style={{ color: '#fff' }}>{product.numReviews} review(s)</h5>\r\n                                            </Carousel.Caption>\r\n                                        </Link>\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n                    </div>\r\n                )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","C:\\ecomm\\backend\\frontend\\src\\actions\\userActions.js",["278"],[],"import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_SUCCESS, \r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_SUCCESS, \r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_RESET, \r\n\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_FAIL, \r\n    USER_LIST_SUCCESS, \r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_FAIL, \r\n    USER_DELETE_SUCCESS, \r\n\r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nimport { \r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecomm\\backend\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\actions\\orderActions.js",["279","280"],[],"import { \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    \r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_LIST_FAIL,\r\n    ORDER_PROMO_CODE_LIST_REQUEST,\r\n    ORDER_PROMO_CODE_LIST_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_DELETE_FAIL,\r\n    ORDER_PROMO_CODE_DELETE_REQUEST,\r\n    ORDER_PROMO_CODE_DELETE_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_CREATE_FAIL,\r\n    ORDER_PROMO_CODE_CREATE_REQUEST,\r\n    ORDER_PROMO_CODE_CREATE_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_DETAILS_FAIL,\r\n    ORDER_PROMO_CODE_DETAILS_REQUEST,\r\n    ORDER_PROMO_CODE_DETAILS_SUCCESS,\r\n\r\n    ORDER_PROMO_CODE_UPDATE_FAIL,\r\n    ORDER_PROMO_CODE_UPDATE_REQUEST,\r\n    ORDER_PROMO_CODE_UPDATE_SUCCESS,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_DELETE_FAIL,\r\n    ORDER_DELETE_REQUEST,\r\n    ORDER_DELETE_SUCCESS,\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/pay/${id}/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            paymentResult,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/deliver/${order._id}/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listPromoCodes = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/promocodes/', config)\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deletePromoCode = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/orders/promocodes/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createPromoCode = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/promocodes/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listPromoCodeDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ORDER_PROMO_CODE_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/orders/promocodes/${id}`)\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updatePromoCode = (promoCode) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/promocodes/update/${promoCode.id}/`,\r\n            promoCode,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type: ORDER_PROMO_CODE_DETAILS_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PROMO_CODE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/orders/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\ecomm\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\ecomm\\backend\\frontend\\src\\constants\\cartConstants.js",[],[],{"ruleId":"281","severity":1,"message":"282","line":63,"column":33,"nodeType":"283","endLine":63,"endColumn":69},{"ruleId":"281","severity":1,"message":"282","line":66,"column":33,"nodeType":"283","endLine":66,"endColumn":69},{"ruleId":"284","severity":1,"message":"285","line":2,"column":47,"nodeType":"286","messageId":"287","endLine":2,"endColumn":53},{"ruleId":"284","severity":1,"message":"288","line":9,"column":10,"nodeType":"286","messageId":"287","endLine":9,"endColumn":14},{"ruleId":"284","severity":1,"message":"289","line":25,"column":21,"nodeType":"286","messageId":"287","endLine":25,"endColumn":28},{"ruleId":"290","severity":1,"message":"291","line":48,"column":8,"nodeType":"292","endLine":48,"endColumn":70,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":201,"column":153,"nodeType":"296","messageId":"297","endLine":201,"endColumn":155},{"ruleId":"284","severity":1,"message":"298","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":25},{"ruleId":"284","severity":1,"message":"299","line":3,"column":38,"nodeType":"286","messageId":"287","endLine":3,"endColumn":42},{"ruleId":"290","severity":1,"message":"300","line":32,"column":8,"nodeType":"292","endLine":32,"endColumn":34,"suggestions":"301"},{"ruleId":"284","severity":1,"message":"302","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":24},{"ruleId":"284","severity":1,"message":"303","line":3,"column":24,"nodeType":"286","messageId":"287","endLine":3,"endColumn":27},{"ruleId":"284","severity":1,"message":"304","line":3,"column":29,"nodeType":"286","messageId":"287","endLine":3,"endColumn":32},{"ruleId":"284","severity":1,"message":"305","line":9,"column":23,"nodeType":"286","messageId":"287","endLine":9,"endColumn":34},{"ruleId":"284","severity":1,"message":"306","line":1,"column":16,"nodeType":"286","messageId":"287","endLine":1,"endColumn":24},{"ruleId":"284","severity":1,"message":"307","line":15,"column":11,"nodeType":"286","messageId":"287","endLine":15,"endColumn":19},{"ruleId":"284","severity":1,"message":"302","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"308","line":36,"column":21,"nodeType":"296","messageId":"297","endLine":36,"endColumn":23},{"ruleId":"290","severity":1,"message":"309","line":81,"column":8,"nodeType":"292","endLine":81,"endColumn":27,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"311","line":10,"column":24,"nodeType":"286","messageId":"287","endLine":10,"endColumn":34},{"ruleId":"294","severity":1,"message":"308","line":56,"column":22,"nodeType":"296","messageId":"297","endLine":56,"endColumn":24},{"ruleId":"284","severity":1,"message":"299","line":2,"column":52,"nodeType":"286","messageId":"287","endLine":2,"endColumn":56},{"ruleId":"290","severity":1,"message":"312","line":69,"column":8,"nodeType":"292","endLine":69,"endColumn":62,"suggestions":"313"},{"ruleId":"284","severity":1,"message":"306","line":1,"column":16,"nodeType":"286","messageId":"287","endLine":1,"endColumn":24},{"ruleId":"284","severity":1,"message":"288","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"314","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"315","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":23},{"ruleId":"294","severity":1,"message":"295","line":34,"column":75,"nodeType":"296","messageId":"297","endLine":34,"endColumn":77},{"ruleId":"284","severity":1,"message":"316","line":125,"column":17,"nodeType":"286","messageId":"287","endLine":125,"endColumn":21},{"ruleId":"284","severity":1,"message":"316","line":303,"column":17,"nodeType":"286","messageId":"287","endLine":303,"endColumn":21},{"ruleId":"284","severity":1,"message":"317","line":4,"column":27,"nodeType":"286","messageId":"287","endLine":4,"endColumn":36},{"ruleId":"284","severity":1,"message":"303","line":4,"column":38,"nodeType":"286","messageId":"287","endLine":4,"endColumn":41},{"ruleId":"284","severity":1,"message":"304","line":4,"column":43,"nodeType":"286","messageId":"287","endLine":4,"endColumn":46},{"ruleId":"284","severity":1,"message":"318","line":20,"column":5,"nodeType":"286","messageId":"287","endLine":20,"endColumn":30},{"ruleId":"284","severity":1,"message":"319","line":45,"column":5,"nodeType":"286","messageId":"287","endLine":45,"endColumn":24},{"ruleId":"284","severity":1,"message":"316","line":482,"column":17,"nodeType":"286","messageId":"287","endLine":482,"endColumn":21},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'success' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'useParams'. Either exclude it or remove the dependency array. Outer scope values like 'useParams' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["320"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useParams' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.",["321"],"'redirect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useLocation' is defined but never used.","'useState' is defined but never used.","'navigate' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'cart', 'dispatch', and 'order._id'. Either include them or remove the dependency array.",["322"],"'listOrders' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["323"],"'Children' is defined but never used.","'LinkContainer' is defined but never used.","'data' is assigned a value but never used.","'Container' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [dispatch, successProductReview, id, successDelete]",{"range":"332","text":"333"},"Update the dependencies array to be: [cartItems, dispatch, productId, qty]",{"range":"334","text":"335"},"Update the dependencies array to be: [success, navigate, order._id, dispatch, cart]",{"range":"336","text":"337"},"Update the dependencies array to be: [order, orderId, dispatch, successPay, successDeliver, userInfo, navigate]",{"range":"338","text":"339"},[1948,2010],"[dispatch, successProductReview, id, successDelete]",[1183,1209],"[cartItems, dispatch, productId, qty]",[3045,3064],"[success, navigate, order._id, dispatch, cart]",[2596,2650],"[order, orderId, dispatch, successPay, successDeliver, userInfo, navigate]"]